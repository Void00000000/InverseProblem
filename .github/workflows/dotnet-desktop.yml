name: Build and Release WPF Project

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    env:
      Solution_Name: InverseProblem.sln
      Build_Configuration: Release

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set PowerShell Execution Policy
      run: |
        powershell -Command "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force"
      shell: cmd

    - name: Restore NuGet Packages
      run: dotnet restore $env:Solution_Name

    - name: Build Solution
      run: msbuild $env:Solution_Name /p:Configuration=$env:Build_Configuration

    - name: Archive Build Artifacts
      run: |
        $buildArtifactsFolder = "E:\Self hosted runner\actions-runner\_work\InverseProblem\BuildArtifacts"
        $outputFile = "$buildArtifactsFolder\BuildArtifacts.zip"
        New-Item -ItemType Directory -Force -Path $buildArtifactsFolder
        xcopy .\*\bin\$env:Build_Configuration\* $buildArtifactsFolder /E /I
        Compress-Archive -Path "$buildArtifactsFolder\*" -DestinationPath $outputFile
      shell: pwsh  # Указываем PowerShell как оболочку для выполнения команд

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: BuildArtifacts.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set upload URL as environment variable
      run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.upload_url }}
        asset_path: ${{ github.workspace }}\BuildArtifacts.zip
        asset_name: BuildArtifacts.zip
        asset_content_type: application/zip
